{"ast":null,"code":"import { GET_API_LIST, SET_API_LIST, ERROR_API_LIST, UPDATE_API_LIST, UPDATE_PAGINATION, SEARCH_RESULTS } from './action';\nconst initialState = {\n  pageNo: 0,\n  posts: [],\n  error: null,\n  totalPages: 0,\n  searchText: '',\n  currentPosts: [],\n  selectedPage: -1,\n  filteredPost: [],\n  currentActivePage: 1\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_API_LIST:\n      return { ...state,\n        posts: payload.data\n      };\n\n    case SET_API_LIST:\n      {\n        let totalPages = state.totalPages + 1;\n        let selectedPage = state.selectedPage;\n        let currentPosts = [];\n        let currentActivePage = 1;\n\n        if (selectedPage > -1) {\n          currentActivePage = selectedPage;\n        }\n\n        if (!state.currentPosts.length) {\n          currentPosts = payload.hits;\n        } else {\n          currentPosts = state.currentPosts;\n        }\n\n        return { ...state,\n          posts: [...state.posts, ...payload.hits],\n          pageNo: payload.page,\n          currentActivePage,\n          totalPages,\n          selectedPage,\n          currentPosts\n        };\n      }\n\n    case UPDATE_API_LIST:\n      return { ...state,\n        posts: payload.data.hits\n      };\n\n    case ERROR_API_LIST:\n      return { ...state,\n        error: payload\n      };\n\n    case UPDATE_PAGINATION:\n      {\n        const selectedPage = payload;\n        const posts = [...state.posts];\n        const startIndex = selectedPage > -1 ? (selectedPage - 1) * 20 : (state.currentActivePage - 1) * 20;\n        const endIndex = startIndex + 20;\n        let Updateposts = posts.slice(startIndex, endIndex);\n        console.log('selectedPage', selectedPage);\n        console.log('posts', Updateposts);\n        return { ...state,\n          selectedPage: payload,\n          currentActivePage: payload,\n          currentPosts: Updateposts,\n          searchText: ''\n        };\n      }\n\n    case SEARCH_RESULTS:\n      {\n        const searchText = payload.toLowerCase().trim();\n        let filteredPost = [];\n\n        if (state.currentPosts && state.currentPosts.length && searchText.length) {\n          filteredPost = state.currentPosts.filter(post => {\n            const title = post.title.toLowerCase();\n            return title.includes(searchText);\n          });\n        }\n\n        if (!searchText.length) {\n          const selectedPage = state.selectedPage;\n          const startIndex = selectedPage > -1 ? (selectedPage - 1) * 20 : (state.currentActivePage - 1) * 20;\n          const endIndex = startIndex + 20;\n          filteredPost = state.posts.slice(startIndex, endIndex);\n        }\n\n        return { ...state,\n          searchText: payload,\n          currentPosts: filteredPost\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/pc-11/Anuj/Exam/Pagination-searching-10sec-api-call/src/store/reducer.js"],"names":["GET_API_LIST","SET_API_LIST","ERROR_API_LIST","UPDATE_API_LIST","UPDATE_PAGINATION","SEARCH_RESULTS","initialState","pageNo","posts","error","totalPages","searchText","currentPosts","selectedPage","filteredPost","currentActivePage","reducer","state","type","payload","data","length","hits","page","startIndex","endIndex","Updateposts","slice","console","log","toLowerCase","trim","filter","post","title","includes"],"mappings":"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","sourcesContent":["import {\n  GET_API_LIST,\n  SET_API_LIST,\n  ERROR_API_LIST,\n  UPDATE_API_LIST,\n  UPDATE_PAGINATION,\n  SEARCH_RESULTS,\n} from './action';\n\nconst initialState = {\n  pageNo: 0,\n  posts: [],\n  error: null,\n  totalPages: 0,\n  searchText: '',\n  currentPosts: [],\n  selectedPage: -1,\n  filteredPost: [],\n  currentActivePage: 1,\n};\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_API_LIST:\n      return {\n        ...state,\n        posts: payload.data,\n      };\n\n    case SET_API_LIST: {\n      let totalPages = state.totalPages + 1;\n      let selectedPage = state.selectedPage;\n      let currentPosts = [];\n      let currentActivePage = 1;\n      if (selectedPage > -1) {\n        currentActivePage = selectedPage;\n      }\n      if (!state.currentPosts.length) {\n        currentPosts = payload.hits;\n      } else {\n        currentPosts = state.currentPosts;\n      }\n      return {\n        ...state,\n        posts: [...state.posts, ...payload.hits],\n        pageNo: payload.page,\n        currentActivePage,\n        totalPages,\n        selectedPage,\n        currentPosts,\n      };\n    }\n\n    case UPDATE_API_LIST:\n      return {\n        ...state,\n        posts: payload.data.hits,\n      };\n\n    case ERROR_API_LIST:\n      return {\n        ...state,\n        error: payload,\n      };\n\n    case UPDATE_PAGINATION: {\n      const selectedPage = payload;\n      const posts = [...state.posts];\n      const startIndex =\n        selectedPage > -1\n          ? (selectedPage - 1) * 20\n          : (state.currentActivePage - 1) * 20;\n      const endIndex = startIndex + 20;\n      let Updateposts = posts.slice(startIndex, endIndex);\n      console.log('selectedPage', selectedPage);\n      console.log('posts', Updateposts);\n      return {\n        ...state,\n        selectedPage: payload,\n        currentActivePage: payload,\n        currentPosts: Updateposts,\n        searchText: '',\n      };\n    }\n\n    case SEARCH_RESULTS: {\n      const searchText = payload.toLowerCase().trim();\n      let filteredPost = [];\n      if (\n        state.currentPosts &&\n        state.currentPosts.length &&\n        searchText.length\n      ) {\n        filteredPost = state.currentPosts.filter((post) => {\n          const title = post.title.toLowerCase();\n          return title.includes(searchText);\n        });\n      }\n\n      if (!searchText.length) {\n        const selectedPage = state.selectedPage;\n        const startIndex =\n          selectedPage > -1\n            ? (selectedPage - 1) * 20\n            : (state.currentActivePage - 1) * 20;\n        const endIndex = startIndex + 20;\n        filteredPost = state.posts.slice(startIndex, endIndex);\n      }\n      return {\n        ...state,\n        searchText: payload,\n        currentPosts: filteredPost,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}