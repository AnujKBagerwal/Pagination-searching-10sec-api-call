{"ast":null,"code":"var _jsxFileName = \"/home/pc-11/Anuj/Exam/Pagination-searching-10sec-api-call/src/component/controller.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchApiData, updatePagination, searchResults } from '../store/actionCreators';\nimport DisplayTable from './DisplayTable';\nexport class controller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      this.props.updatePagination(e.selected + 1);\n    };\n\n    this.handleSearch = value => {\n      console.log('value', value);\n      this.props.searchResults(value);\n    };\n\n    this.state = {\n      pageNo: 0,\n      posts: [],\n      currentPosts: [],\n      searchText: '',\n      selectedPage: -1,\n      totalPages: 0,\n      filteredPost: [],\n      currentActivePage: 1\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      posts\n    } = this.state;\n    const {\n      fetchApiData\n    } = this.props;\n\n    try {\n      if (posts.length === 0) {\n        fetchApiData(this.props.totalPages);\n      }\n\n      setInterval(async () => {\n        await fetchApiData(this.props.totalPages);\n      }, 10000);\n    } catch {}\n  }\n\n  componentDidUpdate(previousProps, previousState, screenShot) {\n    if (this.props.posts.length !== previousProps.posts.length) {\n      this.setState(previousProps => ({ ...previousProps,\n        posts: this.props.posts,\n        pageNo: this.props.pageNo,\n        totalPages: this.props.totalPages,\n        searchText: this.props.searchText,\n        selectedPage: this.props.selectedPage,\n        currentPosts: this.props.currentPosts,\n        filteredPost: this.props.filteredPost,\n        currentActivePage: this.props.currentActivePage\n      }));\n    }\n  }\n\n  render() {\n    // console.log('state', this.state);\n    console.log('props', this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DisplayTable, {\n      state: this.state,\n      handlePageClick: this.handlePageClick,\n      handleSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pageNo: state.pageNo,\n    selectedPage: state.selectedPage,\n    posts: state.posts,\n    currentPosts: state.currentPosts,\n    totalPages: state.totalPages,\n    filteredPost: state.filteredPost,\n    currentActivePage: state.currentActivePage,\n    searchText: state.searchText\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchApiData,\n  searchResults,\n  updatePagination\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(controller);","map":{"version":3,"sources":["/home/pc-11/Anuj/Exam/Pagination-searching-10sec-api-call/src/component/controller.js"],"names":["React","Component","connect","fetchApiData","updatePagination","searchResults","DisplayTable","controller","constructor","props","handlePageClick","e","selected","handleSearch","value","console","log","state","pageNo","posts","currentPosts","searchText","selectedPage","totalPages","filteredPost","currentActivePage","componentDidMount","length","setInterval","componentDidUpdate","previousProps","previousState","screenShot","setState","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchApiData,\n  updatePagination,\n  searchResults,\n} from '../store/actionCreators';\nimport DisplayTable from './DisplayTable';\n\nexport class controller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageNo: 0,\n      posts: [],\n      currentPosts: [],\n      searchText: '',\n      selectedPage: -1,\n      totalPages: 0,\n      filteredPost: [],\n      currentActivePage: 1,\n    };\n  }\n\n  async componentDidMount() {\n    const { posts } = this.state;\n    const { fetchApiData } = this.props;\n    try {\n      if (posts.length === 0) {\n        fetchApiData(this.props.totalPages);\n      }\n      setInterval(async () => {\n        await fetchApiData(this.props.totalPages);\n      }, 10000);\n    } catch {}\n  }\n\n  componentDidUpdate(previousProps, previousState, screenShot) {\n    if (this.props.posts.length !== previousProps.posts.length) {\n      this.setState((previousProps) => ({\n        ...previousProps,\n        posts: this.props.posts,\n        pageNo: this.props.pageNo,\n        totalPages: this.props.totalPages,\n        searchText: this.props.searchText,\n        selectedPage: this.props.selectedPage,\n        currentPosts: this.props.currentPosts,\n        filteredPost: this.props.filteredPost,\n        currentActivePage: this.props.currentActivePage,\n      }));\n    }\n  }\n\n  handlePageClick = (e) => {\n    this.props.updatePagination(e.selected + 1);\n  };\n\n  handleSearch = (value) => {\n    console.log('value', value);\n    this.props.searchResults(value);\n  };\n\n  render() {\n    // console.log('state', this.state);\n    console.log('props', this.props);\n    return (\n      <div>\n        <DisplayTable\n          state={this.state}\n          handlePageClick={this.handlePageClick}\n          handleSearch={this.handleSearch}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pageNo: state.pageNo,\n    selectedPage: state.selectedPage,\n    posts: state.posts,\n    currentPosts: state.currentPosts,\n    totalPages: state.totalPages,\n    filteredPost: state.filteredPost,\n    currentActivePage: state.currentActivePage,\n    searchText: state.searchText,\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchApiData,\n  searchResults,\n  updatePagination,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(controller);\n"]},"metadata":{},"sourceType":"module"}